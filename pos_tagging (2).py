# -*- coding: utf-8 -*-
"""POS_Tagging.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FZy1pEJBHSkxjYIHbaoSTeWqGmRrLg5h
"""

import nltk
nltk.download('punkt_tab')
nltk.download('averaged_perceptron_tagger_eng')
nltk.download('averaged_perceptron_tagger')
from nltk.tokenize import word_tokenize
from nltk import pos_tag, word_tokenize, RegexpParser

# Download necessary NLTK resources
nltk.download('punkt')
nltk.download('averaged_perceptron_tagger')

# Sample sentence
sentence = "The cat sat on the mat."

# Tokenize the sentence
words = word_tokenize(sentence)

# Perform POS tagging
pos_tags = pos_tag(words)

# Print the result
print("POS Tags using NLTK:")
for word, tag in pos_tags:
    print(f"{word} -> {tag}")

# Define a simple grammar for chunking (NP: Noun Phrase, VP: Verb Phrase)
grammar = r"""
  NP: {<DT>?<JJ>*<NN>}   # Noun phrase: Determiner (optional) + Adjective (any number) + Noun
  VP: {<VB.*><NP|PP>*}   # Verb phrase: Verb + Noun Phrase or Prepositional Phrase
  PP: {<IN><NP>}         # Prepositional phrase: Preposition + Noun Phrase
"""

# Create a parser
chunk_parser = RegexpParser(grammar)

# Apply the chunk parser to get a parse tree
tree = chunk_parser.parse(pos_tags)

# Print the tree structure
tree.pretty_print()